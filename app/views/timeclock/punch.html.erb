<%= form_with model: @clock_record do |f| %>

  <div class="field hidden">
    <%= f.label :user_id %>
    <%= f.hidden_field :user_id, value: current_user.id %>
  </div>

  <div class="field hidden">
    <%= f.label :ip_address %>
    <%= f.hidden_field :ip_address, value: request.remote_ip %>
  </div>

  <div class="field hidden">
    <%= f.label :timestamp %>
    <%= f.datetime_select :timestamp %>
  </div>
  <div class="container-flex mt-4">
    <div class="row">
      <div class="col-3">
        <div class="card btn-block border-dark bg-dark">
          <div class="card-body bg-dark text-light text-center pb-0">
            <h5 class="card-title text-center">
            <%= current_user.full_name %></h5>
              Employee #<%=current_user.employee_number %>
              <hr style="border-color: #ffc107;">
              <p class="text-light text-center", id="clockx"></p>
              <hr style="border-color: #ffc107;">
          </div>
          <ul class="list-group list-group-flush bg-dark">
            <% x = @period_records.order('timestamp asc').last.record_type unless 
            @period_records.blank? %>
            <% if x == "Start Work" || x == "End Break" %>
              <li class="list-group-item bg-dark">
                <input class="btn btn-primary btn-block btn-block2 py-4" type="submit", name="record_type", value="Start Break">
              </li>
              <li class="list-group-item bg-dark">
                <input class="btn btn-danger btn-block btn-block2 py-4" type="submit", name="record_type", value="End Work">
              </li>
            <% elsif x == "Start Break" %>
              <li class="list-group-item bg-dark">
              <input class="btn btn-info btn-block btn-block2 py-4" type="submit", name="record_type", value="End Break">
              </li>
            <% else %>
              <li class="list-group-item bg-dark">
              <input class="btn btn-success btn-block btn-block2 py-4" type="submit", name="record_type", value="Start Work">
              </li>
            <% end %>
          <% end %>
          </ul>
          <hr class="mr-3 ml-3" style="border-color: #ffc107;">
          <ul class="list-group list-group-flush bg-dark">
              <li class="list-group-item bg-dark text-white text-center" title="See who's clocked in right now.">
                <%= link_to fa_icon('users', text: "Clocked in right now?"),
                      timeclock_on_clock_path,
                      class: 'bg-dark text-white' %>
              </li>
              <li class="list-group-item bg-dark text-white text-center">
                <a class='bg-dark text-white' data-toggle="modal" style="cursor: pointer;"data-target="#changePinModal" title="Change your PIN."> <%= fa_icon('lock', text: "Change your PIN") %></a>
              </li>
              <li class="list-group-item bg-dark text-white text-center" title="Logout.">
                <%= link_to fa_icon('sign-out', text: "Logout"), logout_path, class: 'bg-dark text-white' %>
              </li>
          </ul>
        </div>
      </div>
     
      <div class="col-9">
        <% if @period_records.blank? %>
        <% else %>
          <% week_recs = records_to_weeks(@period_records)%>
          <%= render partial: "calendar", locals: { :week_recs => week_recs } %>
        <% end %>
      </div>
    </div>
  </div>

<div class="modal fade" id="changePinModal">
  <div class="modal-dialog modal-sm">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Change your PIN!</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <%= form_for :update_pin, method: "patch", :remote => true, :html => { :id => "pin_form" } do |f| %>
          <div class="container text-center" style="margin: 0 auto; width: 200px;">
            <div class="form-group">
              <%= f.label "Current PIN:", class: "form-label" %>
              <%= f.password_field :pin, { class: "form-control", maxlength: 4, id: "pin" } %>
              <div class="invalid-feedback">
                PINS must match.
              </div>
            </div>
            <div class="form-group">
              <%= f.label "Verify PIN:", class: "form-label" %>
              <%= f.password_field :pin2, { class: "form-control", maxlength: 4, id: "pin2" } %>
              <div class="invalid-feedback">
                PINS must match.
              </div>
            </div>
            <div class="form-group">
              <%= f.label "New PIN:", class: "form-label" %>
              <%= f.password_field :new_pin, { class: "form-control", maxlength: 4, id: "new_pin" } %>
              <div class="invalid-feedback">
                New PIN cannot be blank and must be 4 digits.
              </div>
            </div>
            <button type="button" id="pin_submit" class="btn">Submit</button>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>
<body onmousemove="ResetTimers();" onClick="ResetTimers();" touchstart="ResetTimers();" touchmove="ResetTimers();"></body>

<script type="text/javascript">
    $( document ).on('turbolinks:load',function(){
      StartTimers();
    });

    //Change pin validations.
    var pin_submit = document.getElementById("pin_submit");
    var pin = document.getElementById("pin");
    var pin2 = document.getElementById("pin2");
    var new_pin = document.getElementById("new_pin");

    pin_submit.addEventListener("click", function(){
      pin.classList.remove("is-invalid");
      pin2.classList.remove("is-invalid");
      new_pin.classList.remove("is-invalid");
      if(pin.value != pin2.value){
        pin.classList.add("is-invalid");
        pin2.classList.add("is-invalid");
      }
      if(new_pin.value.length < 4){
        new_pin.classList.add("is-invalid");
      }
      if (new_pin.classList.contains("is-invalid")||
              pin.classList.contains("is-invalid")||
             pin2.classList.contains("is-invalid")){

      }
      else {
        var form = document.getElementById("pin_form");
        Rails.fire(form, 'submit');
      }
    });
    
    // Set timeout variables.
    var timoutNow = 10000;
    var timeoutTimer;

    // Start timers.
    function StartTimerss() {
        timeoutTimer = setTimeout("IdleTimeout()", timoutNow);
    };

    // Reset timers.
    function ResetTimerss() {
        clearTimeout(timeoutTimer);
        StartTimers();
    };

    // Logout the user and auto reload or use this window.open('http://www.YourPageAdress.com', '_self'); to auto load a page.
    function IdleTimeout() {
        window.location = ('/timeclock/login');
        $.ajax({
            url: "/logout",
            type: 'DELETE'
          });
        ajaxComplete(function() { window.location = ('/timeclock/login'); } );
    };
</script>