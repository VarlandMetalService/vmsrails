wb = xlsx_package.workbook
wb.styles do |s|
  title = s.add_style b: true, sz: 24, alignment: { horizontal: :center, vertical: :center }
  sub_title = s.add_style i: true, sz: 16, alignment: { horizontal: :center, vertical: :center }
  right_header = s.add_style fg_color: 'FFFFFF', b: true, bg_color: '000000', alignment: { horizontal: :right, vertical: :center, wrap_text: true }
  left_header = s.add_style fg_color: 'FFFFFF', b: true, bg_color: '000000', alignment: { horizontal: :left, vertical: :center, wrap_text: true }
  center_header = s.add_style fg_color: 'FFFFFF', b: true, bg_color: '000000', alignment: { horizontal: :center, vertical: :center, wrap_text: true }
  center = s.add_style alignment: { horizontal: :center, vertical: :top }, border: { style: :thin, color: "00" }
  right = s.add_style alignment: { horizontal: :right, vertical: :top }, border: { style: :thin, color: "00" }
  left = s.add_style alignment: { horizontal: :left, vertical: :top }, border: { style: :thin, color: "00" }
  wrap = s.add_style alignment: { horizontal: :left, vertical: :top, wrap_text: true }, border: { style: :thin, color: "00" }
  margins = { left: 0.5, center: 0.5, top: 0.5, bottom: 0.5, header: 0.25, footer: 0.25 }
  setup = { fit_to_width: 1, fit_to_height: 999, orientation: :landscape, paper_width: "11in", paper_height: "8.5in" }
  options = { grid_lines: false, headings: false, horizontal_centered: true }
  header_footer = { different_first: false, odd_header: '', odd_footer: '&CPage &P of &N&R&D &T'}
  affected = wb.styles.add_style fg_color: "006100", bg_color: 'C6EFCE', b: true, type: :dxf
  unaffected = wb.styles.add_style fg_color: "9C0006", bg_color: 'FFC7CE', type: :dxf
  wb.add_worksheet(name: "#Thickness Checks",
                   page_margins: margins,
                   page_setup: setup,
                   print_options: options,
                   header_footer: header_footer) do |sheet|
    sheet.add_row ["Thickness Checks"], style: title, height: 35
    sheet.add_row ["Generated on #{DateTime.now.strftime('%m/%d/%y')}"], style: sub_title, height: 25
    sheet.add_row [''], height: 25
    sheet.add_row ['Date',
                   'Time',
                   'Check #',
                   'Thickness',
                   'Alloy %',
                   'X',
                   'Y',
                   'Z',
                   'Shop Order #',
                   'Load #',
                   'Block',
                   'RW?',
                   'User',
                   'Directory',
                   'Product',
                   'Application'],
                   style: [left_header,
                           left_header,
                           center_header,
                           right_header,
                           right_header,
                           center_header,
                           center_header,
                           center_header,
                           center_header,
                           center_header,
                           center_header,
                           center_header,
                           left_header,
                           left_header,
                           left_header,
                           left_header], height: 40
    mergers = []
    count = 4
    row_height = 35
    results = @blocks.except(:limit, :offset).limit(1000)
    results.each do |b|
      b.checks.each_with_index do |c, i|
        case i
        when 0
          sheet.add_row [c.check_timestamp.strftime('%m/%d/%Y'),
                        c.check_timestamp.strftime('%H:%M'),
                        c.check_num,
                        c.thickness,
                        c.alloy_percentage,
                        c.x,
                        c.y,
                        c.z,
                        b.so_num,
                        b.load_num,
                        b.block_num,
                        b.is_rework ? 'Y' : 'N',
                        b.user.initials,
                        b.directory,
                        b.product,
                        b.application,
                        '',
                        'MEAN',
                        'MIN',
                        'MAX',
                        'STD DEV'],
                        style: [left,
                                left,
                                center,
                                right,
                                right,
                                right,
                                right,
                                right,
                                center,
                                center,
                                center,
                                center,
                                left,
                                left,
                                left,
                                left,
                                center_header,
                                center_header,
                                center_header,
                                center_header,
                                center_header], height: row_height
        when 1
          sheet.add_row [c.check_timestamp.strftime('%m/%d/%Y'),
                        c.check_timestamp.strftime('%H:%M'),
                        c.check_num,
                        c.thickness,
                        c.alloy_percentage,
                        c.x,
                        c.y,
                        c.z,
                        b.so_num,
                        b.load_num,
                        b.block_num,
                        b.is_rework ? 'Y' : 'N',
                        b.user.initials,
                        b.directory,
                        b.product,
                        b.application,
                        'Thickness:',
                        "=AVERAGE(D#{count}:D#{b.checks.length + count - 1})",
                        "=MIN(D#{count}:D#{b.checks.length + count - 1})",
                        "=MAX(D#{count}:D#{b.checks.length + count - 1})",
                        "=STDEV(D#{count}:D#{b.checks.length + count - 1})"],
                        style: [left,
                                left,
                                center,
                                right,
                                right,
                                right,
                                right,
                                right,
                                center,
                                center,
                                center,
                                center,
                                left,
                                left,
                                left,
                                left,
                                left_header,
                                right,
                                right,
                                right,
                                right], height: row_height
        when 2
          sheet.add_row [c.check_timestamp.strftime('%m/%d/%Y'),
                        c.check_timestamp.strftime('%H:%M'),
                        c.check_num,
                        c.thickness,
                        c.alloy_percentage,
                        c.x,
                        c.y,
                        c.z,
                        b.so_num,
                        b.load_num,
                        b.block_num,
                        b.is_rework ? 'Y' : 'N',
                        b.user.initials,
                        b.directory,
                        b.product,
                        b.application,
                        'Alloy %:',
                        "=AVERAGE(E#{count}:E#{b.checks.length + count - 1})",
                        "=MIN(E#{count}:E#{b.checks.length + count - 1})",
                        "=MAX(E#{count}:E#{b.checks.length + count - 1})",
                        "=STDEV(E#{count}:E#{b.checks.length + count - 1})"],
                        style: [left,
                                left,
                                center,
                                right,
                                right,
                                right,
                                right,
                                right,
                                center,
                                center,
                                center,
                                center,
                                left,
                                left,
                                left,
                                left,
                                left_header,
                                right,
                                right,
                                right,
                                right], height: row_height
        else 
          sheet.add_row [c.check_timestamp.strftime('%m/%d/%Y'),
                        c.check_timestamp.strftime('%H:%M'),
                        c.check_num,
                        c.thickness,
                        c.alloy_percentage,
                        c.x,
                        c.y,
                        c.z,
                        b.so_num,
                        b.load_num,
                        b.block_num,
                        b.is_rework ? 'Y' : 'N',
                        b.user.initials,
                        b.directory,
                        b.product,
                        b.application],
                        style: [left,
                                left,
                                center,
                                right,
                                right,
                                right,
                                right,
                                right,
                                center,
                                center,
                                center,
                                center,
                                left,
                                left,
                                left,
                                left], height: row_height
        end
        count += 1
      end
      count += 1
      mergers << count
      sheet.add_row [""]
    end
    sheet.column_widths(13, 8, 8, 10, 10, 10, 10, 10, 13, 7, 8, 5, 5)
    sheet.merge_cells("A1:P1")
    sheet.merge_cells("A2:P2")
    sheet.merge_cells("A3:P3")

    mergers.each do |m|
      sheet.merge_cells("A#{m}:P#{m}")
    end
  end
end